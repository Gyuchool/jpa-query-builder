package persistence.sql.ddl;

import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;

import java.lang.reflect.Field;

public class PkColumn extends JpaColumn {

    private final GenerationType generationType;

    public PkColumn(Field field) {
        super(field.getName(), false, ColumnType.toDdl(field.getType()));
        validateGeneratedValue(field);
        GeneratedValue annotation = field.getAnnotation(GeneratedValue.class);
        this.generationType = annotation.strategy();
    }

    private void validateGeneratedValue(Field field) {
        if (!field.isAnnotationPresent(GeneratedValue.class)) {
            throw new IllegalArgumentException("[INFO] No @GeneratedValue annotation");
        }
    }

    public String getGenerationTypeDefinition() {
        return " generated by default as " + generationType.name().toLowerCase() + ", ";
    }

    public String getDefinition() {
        return getName() + columnType.getColumnDefinition();
    }

    public String getPkDefinition() {
        return "primary key (" + getName() + ")";
    }
}
